/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.0.21
 * Generated at: 2022-06-24 04:20:29 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import dao.CRUD;
import dao.Livro;
import dao.Livro;
import dao.DataPadraoBrasil;
import java.util.ArrayList;
import java.util.Date;
import java.text.SimpleDateFormat;

public final class listar_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.Date");
    _jspx_imports_classes.add("dao.CRUD");
    _jspx_imports_classes.add("java.text.SimpleDateFormat");
    _jspx_imports_classes.add("dao.Livro");
    _jspx_imports_classes.add("dao.DataPadraoBrasil");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

//https://cursos.alura.com.br/forum/topico-encoding-de-jsp-25210

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"ISO-8859-1\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<link\r\n");
      out.write("	href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css\"\r\n");
      out.write("	rel=\"stylesheet\"\r\n");
      out.write("	integrity=\"sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3\"\r\n");
      out.write("	crossorigin=\"anonymous\">\r\n");
      out.write("<script\r\n");
      out.write("	src=\"https://cdn.jsdelivr.net/npm/@popperjs/core@2.10.2/dist/umd/popper.min.js\"\r\n");
      out.write("	integrity=\"sha384-7+zCNj/IqJ95wo16oMtfsKbZ9ccEh31eOz1HGyDuCQ6wgnyJNSYdrPa03rtR1zdB\"\r\n");
      out.write("	crossorigin=\"anonymous\"></script>\r\n");
      out.write("<script\r\n");
      out.write("	src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.min.js\"\r\n");
      out.write("	integrity=\"sha384-QJHtvGhmr9XOIpI6YVutG+2QOK9T+ZnN4kzFN1RtK3zEFEIsxhlmWl5/YESvpZ13\"\r\n");
      out.write("	crossorigin=\"anonymous\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("	<form id=\"inserir\" method=\"post\">\r\n");
      out.write("		");

		CRUD crud = new CRUD();
		crud.Conectar();
		ArrayList<Livro> lista = crud.listarTodosLivros();
		DataPadraoBrasil d = new DataPadraoBrasil();
		
      out.write("\r\n");
      out.write("\r\n");
      out.write("		<div class=\"container\" style=\"margin-bottom: 30px; margin-top: 30px;\">\r\n");
      out.write("			<!-- div filtro buscar -->\r\n");
      out.write("			<div class=\"row\">\r\n");
      out.write("\r\n");
      out.write("				<div class=\"mb-3 col-8\">\r\n");
      out.write("					<input type=\"text\" class=\"form-control\" id=\"buscarlivro\"\r\n");
      out.write("						aria-describedby=\"emailHelp\" name=\"substring\"\r\n");
      out.write("						placeholder=\"Nome do livro, autor(a), editora ou data de lançamento\">\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"col-2\">\r\n");
      out.write("					<button type=\"submit\" name=\"buscar\" class=\"btn btn-primary\">Buscar</button>\r\n");
      out.write("				</div>\r\n");
      out.write("\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("			<!-- div tabela cabeçalho -->\r\n");
      out.write("			<div class=\"row \">\r\n");
      out.write("				<table class=\"table table-dark table-hover\">\r\n");
      out.write("					<thead>\r\n");
      out.write("						<tr>\r\n");
      out.write("							<th scope=\"col\">#</th>\r\n");
      out.write("							<th scope=\"col\">Id</th>\r\n");
      out.write("							<th scope=\"col\">Nome do Livro</th>\r\n");
      out.write("							<th scope=\"col\">Autor(a)</th>\r\n");
      out.write("							<th scope=\"col\">Editora</th>\r\n");
      out.write("							<th scope=\"col\">Data de lançamento</th>\r\n");
      out.write("							<th scope=\"col\"></th>\r\n");
      out.write("							<th scope=\"col\"></th>\r\n");
      out.write("						</tr>\r\n");
      out.write("					</thead>\r\n");
      out.write("					<tbody>\r\n");
      out.write("						<!-- div corpo tabela filtro buscar -->\r\n");
      out.write("						");

						if (request.getParameter("substring") != null && request.getParameter("substring") != "") {
							ArrayList<Livro> lb = crud.pesquisarLivros(request.getParameter("substring"));
							for (int i = 0; i < lb.size(); i++) {
								Livro livrob = lb.get(i);
								String dl = d.data(livrob.getData());
						
      out.write("\r\n");
      out.write("						<tr>\r\n");
      out.write("							<td>");
      out.print(i + 1);
      out.write("</td>\r\n");
      out.write("							<td>");
      out.print(livrob.getId());
      out.write("</td>\r\n");
      out.write("						    <td>");
      out.print(livrob.getNome());
      out.write("</td>\r\n");
      out.write("						    <td>");
      out.print(livrob.getAutor());
      out.write("</td>\r\n");
      out.write("							<td>");
      out.print(livrob.getEditora());
      out.write("</td>\r\n");
      out.write("							<td>");
      out.print(dl);
      out.write("</td>\r\n");
      out.write("							<td><!-- div editar -->\r\n");
      out.write("								");

								out.print("<a style = color:#836FFF; href='editar.jsp?id=" + livrob.getId() + "&nome=" + livrob.getNome() + "&autor="
										+ livrob.getAutor() + "&editor=" + livrob.getEditora() + "&data=" + livrob.getData() + "'>Editar</a>");
								
      out.write("\r\n");
      out.write("							</td>\r\n");
      out.write("							<td><!-- div remover -->\r\n");
      out.write("								");

								out.print("<a style = color:#F08080; href='excluir.jsp?id=" + livrob.getId() + "&nome=" +livrob.getNome() + "&autor="
										+ livrob.getAutor() + "&editor=" + livrob.getEditora() + "&data=" + dl + "'>Remover</a>");
								
      out.write("\r\n");
      out.write("							</td>\r\n");
      out.write("							\r\n");
      out.write("						</tr>\r\n");
      out.write("\r\n");
      out.write("						");

						}
						} else {
							
						for (int i = 0; i < lista.size(); i++) {
						Livro l = lista.get(i);
						String dl = d.data(l.getData());
						
      out.write("\r\n");
      out.write("						<!-- div corpo tabela lista todos -->\r\n");
      out.write("						<tr>\r\n");
      out.write("							<td>");
      out.print(i + 1);
      out.write("</td>\r\n");
      out.write("							<td>");
      out.print(l.getId());
      out.write("</td>\r\n");
      out.write("							<td>");
      out.print(l.getNome());
      out.write("</td>\r\n");
      out.write("							<td>");
      out.print(l.getAutor());
      out.write("</td>\r\n");
      out.write("							<td>");
      out.print(l.getEditora());
      out.write("</td>\r\n");
      out.write("							<td>");
      out.print(dl);
      out.write("</td>\r\n");
      out.write("							<td><!-- div editar -->\r\n");
      out.write("								");

								out.print("<a style = color:#836FFF; href='editar.jsp?id=" + l.getId() + "&nome=" + l.getNome() + "&autor="
										+ l.getAutor() + "&editor=" + l.getEditora() + "&data=" + l.getData() + "'>Editar</a>");
								
      out.write("\r\n");
      out.write("							</td>\r\n");
      out.write("							<td><!-- div remover -->\r\n");
      out.write("								");

								out.print("<a style = color:#F08080; href='excluir.jsp?id=" + l.getId() + "&nome=" + l.getNome() + "&autor="
										+ l.getAutor() + "&editor=" + l.getEditora() + "&data=" + dl + "'>Remover</a>");
								
      out.write("\r\n");
      out.write("							</td>\r\n");
      out.write("						</tr>\r\n");
      out.write("						");

						}
						}
						
      out.write("\r\n");
      out.write("					</tbody>\r\n");
      out.write("				</table>\r\n");
      out.write("				<!-- div botão inserir -->\r\n");
      out.write("				<div>\r\n");
      out.write("					<a href=\"inserir.jsp\"><button type=\"button\"\r\n");
      out.write("							class=\"btn btn-success\">Inserir</button></a>\r\n");
      out.write("				</div>\r\n");
      out.write("\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("		</div>\r\n");
      out.write("	</form>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
