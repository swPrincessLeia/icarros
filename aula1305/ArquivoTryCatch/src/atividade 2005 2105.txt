1:18

atividade aula 2005


Nome

Idade

Email

Profissão

1º) Fazer a validação de todos os campos como obrigatório

2º) no campo idade não pode entrar caracteres

3º) Ao clicar no botão gravar 

gravar a informação em um arquivo txt

dados.txt

Precisa estar na mesma pasta da sua aplicação 

4º) Limpar os campos

5º) Posiciona o cursor e permite inserir um novo registro

---------------------------------------------------------------------------------------------------

2105
Primeiro fazer todos os botões de operadores calcular
Fazer o controle dos zeros
Fazer o controle da vírgula
Depois criar na nossa calculadora um botão para 
mostrar o histórico

10+2=12
+1=13

cuidar do processo da tecla igual
Quando for a primeira vez verificar o visor está vazio e não deixar ela atribuir o valor2 sem nenhum conteúdo
a- Primeiro fazer todos os botões de operadores calcular

b- Fazer o controle dos zeros

c- Fazer o controle da vírgula

d- Depois criar na nossa calculadora um botão para 
mostrar o histórico

e- Cuidar do processo da tecla igual

f- Quando for a primeira vez verificar o visor está vazio e não deixar ela atribuir o valor2 sem nenhum conteúdo

g- Inicializar a nossa calculadora com Zero, porém se digitar
a virgula deixar como 0, caso contrário trocar o zero pelo
número digitado correspondente

-------------------------------------------------------------------------
verificar atividade

Nome
Idade
Email
Profissão

1º) Fazer a validação de todos os campos como obrigatório
2º) no campo idade não pode entrar caracteres
3º) Ao clicar no botão gravar 
gravar a informação em um arquivo txt
dados.txt
Precisa estar na mesma pasta da sua aplicação 
4º) Limpar os campos
5º) Posiciona o cursor e permite inserir um novo registro


	textUsuario.setText()

erro app java

gravarArquivo.append("Nome: "+textNome.getText()+"\nIdade: "+textIdade.getText()+"\nEmail: "+textEmail.getText()+"\nTelefone: "+textTelefone.getText()+"\n");


https://webdeasy.de/en/error-a-jni-error-has-occured-how-to-fix-this-java-error/

-----------------------------------------------------------------------------------------------------
Atividade

Vamos agora criar um novo método dentro da classe BancoDeDados

ListarComFiltros - Método



Classe - BuscaDeContatos
Metodo
Scanner
Criar uma variável para colher o email da pessoa e retornar o registro

chama o 
ListarComFiltros e mostra o email que foi consultado


import java.util.ArrayList;

public class ListaDeContatos extends ConexaoBD {

	public void listaContatos() {
		try {
			// query: variável para guardar o comando sql
			String query = "select * from icarros.contatos";
			this.resultset = this.statement.executeQuery(query);
			this.statement = this.connection.createStatement();
			ArrayList<String> lista = new ArrayList<>();

			while (this.resultset.next()) {

				String meuID = resultset.getString("id");
				String meuNome = resultset.getString("nome");
				int idade = resultset.getInt("idade");
				String email = resultset.getNString("email");
				String funcao = resultset.getString("funcao");
				
				System.out.println("id: " + meuID + 
						 " | Nome: " + meuNome + 
						 " | Idade:" + idade +
						 " | E-mail: " + email + 
						 " | Função: " + funcao);
			}

		} catch (Exception e) {
			System.out.println("Erro" + e.getMessage());

		}

	}

}


concatenaRegistro.append(System.lineSeparator()+registro);	
JOptionPane.showMessageDialog(null, concatenaRegistro);


import java.awt.EventQueue;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.border.EmptyBorder;
import javax.swing.JTextArea;
import javax.swing.JScrollBar;
import java.awt.ScrollPane;

public class Consulta extends JFrame {

	private JPanel jTatble;
	private JTable table;
	private JTextField textBuscar;
	private JTextArea textArea;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					Consulta frame = new Consulta();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public Consulta() {

		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 640, 416);
		jTatble = new JPanel();
		jTatble.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(jTatble);
		jTatble.setLayout(null);

		JButton btnBuscarFiltroEmail = new JButton("Buscar");
		btnBuscarFiltroEmail.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				
				BuscaDeContatos buscaContatos = new BuscaDeContatos();
				buscaContatos.Conectar();
				String email = textBuscar.getText();

				if (buscaContatos.estaConectado()) {

					StringBuilder concatenaRegistro = new StringBuilder();
					for (String registro : buscaContatos.buscaContatos(email)) {
						concatenaRegistro.append(registro);
						textArea.setText(concatenaRegistro.toString());
					}
				} else {

					JOptionPane.showMessageDialog(null, "embaço");

				}
				
				
			}
		});
		btnBuscarFiltroEmail.setBounds(196, 30, 65, 23);
		jTatble.add(btnBuscarFiltroEmail);

		JButton btnExibirTodos = new JButton("Listar registros");
		btnExibirTodos.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				ListaDeContatos listaContatos = new ListaDeContatos();
				listaContatos.Conectar();

				if (listaContatos.estaConectado()) {

					StringBuilder concatenaRegistro = new StringBuilder();
					for (String registro : listaContatos.listaContatos()) {
						concatenaRegistro.append(registro);
						textArea.setText(concatenaRegistro.toString());
					
											
						
					}
					
				} else {

					JOptionPane.showMessageDialog(null, "embaço");

				}

			}
		});
		btnExibirTodos.setBounds(271, 30, 131, 23);
		jTatble.add(btnExibirTodos);

		table = new JTable();
		table.setBounds(39, 205, 157, -122);
		jTatble.add(table);
		
		textBuscar = new JTextField();
		textBuscar.setBounds(39, 11, 86, 20);
		jTatble.add(textBuscar);
		textBuscar.setColumns(10);
		
		textArea = new JTextArea();
		textArea.setBounds(77, 106, 361, 204);
		jTatble.add(textArea);
	}
}
use icarros;

create table icarros.contatos(
id int not null auto_increment primary key,
nome varchar(60) not null,
idade int not null,
email varchar(80) not null,
funcao varchar(50) not null
);

-- permite mostrar a estrutura de dados que compoem a nossa tabela
desc icarros.contatos;

-- inserir registros

insert into icarros.contatos
values
(null, "Petrolina", 24, "petrolina@icarros.com.br", "Analista de sistemas"),
(null,"Adroaldo",30,"adroaldo@icarros.com.br", "Suporte Técnico"),
(null, "Tarciano",45,"tarciano@icarros.com.br" "Gente do CPD"),
(null, "Cleverson",40,"cleverson@icarros.com.br", "Adm CDP"),
(null, "Rinosoro",35,"rinosoro@icarros.com.br", "Help Desk");


insert into icarros.contatos
values
(null,"Petrolina",24,"petrolina@icarros.com.br","Analista de Sistemas"),
(null,"Adroaldo",30,"adroaldo@icarros.com.br","Suporte Técnico"),
(null,"Tarciano",45,"tarciano@icarros.com.br","Gerente de CPD"),
(null,"Kleverson",40,"klev@icarros.com.br","Adm CPD"),
(null,"Rinosoro",35,"rinosoro@icarros.com.br","Help Desk");


-- mostrar tudo
select* from icarros.contatos;
-- matou a tabelinha :/
drop table icarros.contatos;

select * from icarros.contatos where email like "%@icarros%";

import java.util.ArrayList;

public class Agenda {

	public static void main(String[] args) {

		ListaDeContatos listaContatos = new ListaDeContatos();
		BuscaDeContatos buscaContatos = new BuscaDeContatos();	
		
		listaContatos.Conectar();
		buscaContatos.Conectar();

		if (listaContatos.estaConectado()) {
			System.out.println("Conectou! :D");
			
			for(String l: listaContatos.listaContatos() ) {
				System.out.println("teste" + l);
				
				
			}
			//buscaContatos.buscaContatos();

		} else {

			System.out.println("Deu ruim! :/");
		}
	}
	
	
	public static void  todosContatos() {
		
		
		
	}   

}
array nome {Joana,Matheus,Thales,Thaís,Lucas,Daniela,Caio,Lucas,Carina,Ricardo,Noa)

laço de repetição
Escreva os registros na nossa suuuuper tabela de contatos



Date data = new Date(ano - 1900, mes - 1, dia);// não sei se seria a forma adequada
		SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
7 > 10
17 >20
rodízio

1 e 2 segunda-feira
3 e 4 terça-feira
5 e 6 quarta-feira
7 e 8 quinta-feira
9 e 0 sexta-feira


 if(placa= 3 or placa = 4) 
        if(placa= 5 or placa = 6) 
          if(placa= 7 or placa = 8) 
            if(placa= 9 or placa = 0) 
			
			Mostrar o campo de valor do veículo,
junto com o processo de placa.

Mostrar um campo que qualcule a
entrada de 50%.

Criar um campo chamando parcelas
alter table ..... add parcelas int

update
Este calculo deverá ser feito em case
1    12 x juros de 5%
2    24 x juros de 10%
3    48 x juros de 12%
4    24 x
5    12 x

Mostre o total bruto calculado
a entrada mais as prestações com os 
juros atribuídos

if(request.getParameter("substring")!=null && request.getParameter("substring")!=""){
							ArrayList lb =crud.pesquisarLivros(request.getParameter("substring"));
							for (int i = 0; i < lb.size(); i++) {
								Livro l = lista.get(i);
								String dl = d.data(l.getData());
							}
							
							String sub = request.getParameter("substring");

				crud.pesquisarLivros(sub)
